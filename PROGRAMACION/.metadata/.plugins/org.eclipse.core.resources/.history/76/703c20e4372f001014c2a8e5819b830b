package tema06.EjerciciosRepaso.Ej01.servicios;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import tema06.EjBasicos.Ej09.servicios.OpenConnection;
import tema06.EjerciciosRepaso.Ej01.modelo.Producto;

public class ProductosService {
	
	private OpenConnection openConn;

	public ProductosService() {
		openConn = new OpenConnection();
		System.out.println("Conexión establecida.");
	}
	
	/*1. insertarProducto(): Recibe un objeto Producto_gourmet e inserta en BD un producto gourmet. Si el
	precio es negativo o cero, se deberá lanzar la excepción ProductoInvalidoException.*/
	public void insertarProducto(Producto p) throws SQLException {
		ResultSet rs = null;
		try(Connection conn = openConn.getNewConnection(); Statement stmt = conn.createStatement()){
			
		}
		
	}
	/*2. insertarProductos(): Recibe una lista de productos y los inserta en BD. Si ocurre un error al insertar
	alguno de ellos, ninguno de los productos debe guardarse.*/
	
	/*3. consultaTipoProductos(): Busca todos los productos que sean de un ‘tipo’ específico pasado por
	parámetro y devuelve una lista con todos los productos encontrados. Si no existe ningún producto,
	lanzar la excepción ProductoNoEncontradoException.*/
	
	/*4. eliminaProducto(): Elimina un producto por su id. Si el producto no está en BD, lanzar la excepción
	ProductoNoEncontradoException.*/
	
	/*5. consultarProductosDisponibles(): Consulta todos los productos disponibles. Debe devolver un mapa
	donde la clave es el id del producto y el valor, el propio producto.*/

}
